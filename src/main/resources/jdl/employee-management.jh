entity Department{
	name String,
    shortName String
}

entity Designation{
	name String,
    shortName String,
    description String
}

entity Employee{
	employeeId String required,
    fullName String required,
    fathersName String required,
    mothersName String required,
    birthDate LocalDate required,
    maritalStatus MaritalStatus required,
    gender Gender required,
    religion Religion required,
    permanentAddress String required,
    presentAddress String required,
    nId String required,
    tin String,
    contactNumber String required,
    email String,
    bloodGroup String,
    emergencyContact String required,
    joiningDate LocalDate,
    manager Long,
    employeeStatus EmployeeStatus,
    employmentType EmploymentType,
    terminationDate LocalDate,
    reasonOfTermination String,
    userAccount Boolean,
    photo ImageBlob
}



entity AcademicInformation{
	degree String,
    boardOrUniversity String,
    passingYear Integer,
    group String
}

entity TrainingInformation{
	name String,
    subject String,
    organization String
}

entity FamilyInformation{
	name String,
    relation String,
    contactNumber String
}

entity ReferenceInformation{
	name String,
    designation String,
    organization String,
    contactNumber String
}

entity ExperienceInformation{
	organization String,
    designation String,
    startDate LocalDate,
    endDate LocalDate,
    employmentType EmploymentType
}

enum MaritalStatus{
	MARRIED, UNMARRIED, SEPARATED
}

enum Gender{
	MALE, FEMALE, OTHERS
}

enum EmploymentType{
	PERMANENT, TEMPORARY, ADHOC, PART_TIME
}

enum EmployeeStatus{
	ACTIVE, TERMINATED
}

enum Religion{
	ISLAM, HINDU, BUDDHIST, CHRISTIANS, OTHERS
}

relationship OneToOne{
    Employee{department} to Department
}



relationship ManyToOne{
    Employee{designation} to Designation
}

relationship ManyToOne{
	AcademicInformation{employee} to Employee,
    ExperienceInformation{employee} to Employee,
    FamilyInformation{employee} to Employee,
    TrainingInformation{employee} to Employee,
    ReferenceInformation{employee} to Employee
}


paginate * with pager
search * with elasticsearch
service * with serviceClass

// Set pagination options

//paginate Job with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct
filter all

// Set service options to all except few


